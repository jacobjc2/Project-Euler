# Project Euler Problem 7
# 
#
# Author: Jacob Christensen <jacobjc2@gmail.com>
# Date: 04/30/2020
# Desc:
# 		Find the largest product of 13 adjacent digits

num_string = "73167176531330624919225119674426574742355349194934969835203127745063262395783180169848018694788518438586156078911294949545950173795833195285320880551125406987471585238630507156932909632952274430435576689664895044524452316173185640309871112172238311362229893423380308135336276614282806444486645238749303589072962904915604407723907138105158593079608660172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"

def split(str):
	return [char for char in str]

num_chars = split(num_string)
num_arr = []

for char in num_chars:
	num_arr.append(int(char))
	
largest_product = 0

for i in range(986):
	product = 1
	for j in range(i, i+13):
		print(j)
		product *= num_arr[j]
	
	if(product > largest_product):
		largest_product = product

print(largest_product)